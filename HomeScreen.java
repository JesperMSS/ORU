package scrumxp;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import com.sbix.jnotify.NoticeType;
import com.sbix.jnotify.NoticeWindow;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import oru.inf.InfDB; 
import oru.inf.InfException;


/**
 *
 * @author jespersundin
 */
public class HomeScreen extends javax.swing.JFrame {
    DefaultTableModel model;
    private static InfDB idb;
    private static String userID;
    private static String id;
    /**
     * Creates new form HomeScreen
     */
    public HomeScreen(InfDB idb, String userID) {
        initComponents();
        this.idb = idb;
        this.userID = userID;
        model = (DefaultTableModel) jTableNotiser.getModel();
        skapaNotifikation();
        hamtainlagg2();
        fillList();
        changeLabel();

        
        Notifikation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableNotiser = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        bloggMeny = new javax.swing.JLabel();
        loggaUtMeny = new javax.swing.JLabel();
        motenMeny = new javax.swing.JLabel();
        kontoMeny = new javax.swing.JLabel();
        kalenderMeny = new javax.swing.JLabel();
        motenMeny1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        anslagList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/scrumxp/logo_og_sv.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableNotiser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titel", "Förnamn", "Efternamn", "Kategori", "Blogg", "Datum"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableNotiser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableNotiserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableNotiser);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel5.setText("Välkommen");

        userLabel.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        userLabel.setText("(Användare)");

        jLabel7.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel7.setText("Notifikationer");

        jLabel8.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel8.setText("Bloggflöde");

        jCheckBox1.setFont(new java.awt.Font("Arial Black", 0, 10)); // NOI18N
        jCheckBox1.setText("Stäng av notiser");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        bloggMeny.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        bloggMeny.setText(" Blogg");
        bloggMeny.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bloggMeny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bloggMenyMouseClicked(evt);
            }
        });

        loggaUtMeny.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        loggaUtMeny.setText("   Logga ut");
        loggaUtMeny.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        loggaUtMeny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loggaUtMenyMouseClicked(evt);
            }
        });

        motenMeny.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        motenMeny.setText("Möten");
        motenMeny.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        motenMeny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                motenMenyMouseClicked(evt);
            }
        });

        kontoMeny.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        kontoMeny.setText("Konto");
        kontoMeny.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        kontoMeny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kontoMenyMouseClicked(evt);
            }
        });

        kalenderMeny.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        kalenderMeny.setText("   Kalender");
        kalenderMeny.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        kalenderMeny.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kalenderMenyMouseClicked(evt);
            }
        });

        motenMeny1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        motenMeny1.setText("Skapa anslag");
        motenMeny1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        motenMeny1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                motenMeny1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(bloggMeny, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kalenderMeny, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(motenMeny, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(motenMeny1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kontoMeny, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(loggaUtMeny, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloggMeny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loggaUtMeny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(motenMeny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kontoMeny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kalenderMeny, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(motenMeny1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        anslagList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        anslagList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                anslagListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(anslagList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                    .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(212, 212, 212)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(137, 137, 137))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void changeLabel(){
        // Visar användarens namn
        try {
            String förnamn = idb.fetchSingle("SELECT förnamn from users where userID =" + userID + ";");
            String efternamn = idb.fetchSingle("SELECT efternamn FROM users WHERE userID =" + userID + ";");
            userLabel.setText(förnamn + " " + efternamn);
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void fillList(){
        //Fyller anslagslistan med anslag
        DefaultListModel listmodel = new DefaultListModel();
        String getTitel = "SELECT Titel from Anslag ORDER BY DATE DESC;";
        
        try {
            ArrayList<String> titels = idb.fetchColumn(getTitel);
            for (String titel : titels){
                listmodel.addElement(titel);
            }
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        anslagList.setModel(listmodel);
    }
    
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // Kontrollerar om notikations-comboxboxen är ifylld. 
        try {
            String koll = idb.fetchSingle("Select on_off from notifikationer where userID = " + userID);
            if (koll.equals(""))
            {
                idb.insert("Insert into notifikationer values ");
            }
            if(koll.equals("J")){
                idb.update("UPDATE notifikationer SET on_off = 'N' WHERE userID =" + userID);
                model.setRowCount(0);
            }
            if(koll.equals("N")){
                idb.update("UPDATE notifikationer SET on_off = 'J' WHERE userID =" + userID);
                hamtainlagg2();
            }
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jCheckBox1ActionPerformed
    private void Notifikation() {
        //Hämtar de inlägg som har fått en ny kommentar.
        try {
            ArrayList<String> inlagglista = new ArrayList();
            String query1 = "Select inlaggID from inlagg where anvandare =" + userID;
            inlagglista = idb.fetchColumn(query1);
            String Titlar = "";
            boolean kollNotis = false;
            
            for(String inlagg: inlagglista){
                ArrayList<String> kommentarlista = new ArrayList();
                String queryKommentarID = "Select kommentarid from kommentarer where inlaggID =" + inlagg;
               
                kommentarlista = idb.fetchColumn(queryKommentarID);
                String titel = idb.fetchSingle("Select titel from inlagg where inlaggID =" + inlagg);
                int x = 50;
                for (String kommentar: kommentarlista){
                String queryKoll = "Select Notifikation from kommentarer where inlaggID =" + inlagg + " AND kommentarID = " + kommentar;
               
                String koll = idb.fetchSingle(queryKoll);
               
                
                
                if(koll.equals("j")){
                    kollNotis = true;
                    String message = "Du har fått en ny kommentar på ditt inlägg: " + titel;
                    Titlar = Titlar + ", " + titel;
                    String updatequery = "update kommentarer set notifikation = 'n' where inlaggID = " + inlagg + "!!!!!!!";
                    idb.update("update kommentarer set notifikation = 'n' where inlaggID = " + inlagg);
                    
                    
                    
                }
                
                
                }

                    
                        }
            if(kollNotis == true){
            String message = "Du har fått en ny kommentar på dina inlägg:" + Titlar;
            NoticeWindow j = new NoticeWindow(NoticeType.SUCCESS_NOTIFICATION, message, NoticeWindow.LONG_DELAY);
            j.setAlwaysOnTop(true);
            j.setLocation(1075, 50);
            }
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }
    private void bloggMenyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bloggMenyMouseClicked
        new BloggMeny(idb, userID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_bloggMenyMouseClicked

    private void kalenderMenyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kalenderMenyMouseClicked
        new Calender(idb, userID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_kalenderMenyMouseClicked

    private void motenMenyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_motenMenyMouseClicked
        new MötesMeny(idb, userID).setVisible(true);
        this.dispose();      
    }//GEN-LAST:event_motenMenyMouseClicked

   
    private void hamtainlagg2(){
        //Hämtar 10 senaste inläggen till table. 
        ArrayList<String> inlagglista = new ArrayList();
        
        
        try {
            String check = idb.fetchSingle("Select ON_OFF FROM notifikationer where userID = "+userID);
            if(check.equals ("N")){
            jCheckBox1.setSelected(true);
            
            }
            if(check.equals("J")){
                
            
            inlagglista = idb.fetchColumn("Select inlaggID from inlagg ORDER BY DATE desc limit 10");
            
        for(String inlagg:inlagglista) {
            String titel = "SELECT TITEL FROM INLAGG WHERE INLAGGID = "+ inlagg;
            String anvandare = "SELECT ANVANDARE FROM INLAGG WHERE INLAGGID = "+ inlagg;
            String kategori = "SELECT KATEGORI FROM INLAGG WHERE INLAGGID = "+ inlagg;
            String blogg = "SELECT BLOGG FROM INLAGG WHERE INLAGGID = "+ inlagg;
            String id = "SELECT date FROM INLAGG WHERE INLAGGID = "+ inlagg;
            String user = idb.fetchSingle(anvandare);
            String fornamn = "Select förnamn from users where userID =" + user;
            String efternamn = "Select efternamn from users where userID =" + user;
        
            model.insertRow(model.getRowCount(), new Object[]{idb.fetchSingle(titel), idb.fetchSingle(fornamn), idb.fetchSingle(efternamn),
                    idb.fetchSingle(kategori), idb.fetchSingle(blogg), idb.fetchSingle(id)} );
        }   
        }
        }
            
         catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void kontoMenyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kontoMenyMouseClicked
        new UserInfo(idb, userID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_kontoMenyMouseClicked

    private void loggaUtMenyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loggaUtMenyMouseClicked
        if (Validering.checkLogout()) {
            new LoginForm(idb).setVisible(true);
            this.dispose();
        }

    }//GEN-LAST:event_loggaUtMenyMouseClicked

    private void jTableNotiserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableNotiserMouseClicked
       //Hämtar inlägg och öppnar i ett nytt fönster. 
        int index = jTableNotiser.getSelectedRow();
       TableModel model = jTableNotiser.getModel();
       String titel = model.getValueAt(index, 0).toString();
        try {
            String query = idb.fetchSingle("Select inlaggID from inlagg where titel = '" + titel + "'");
            
            new SeInlagg(idb, query, userID).setVisible(true);
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

     
    }//GEN-LAST:event_jTableNotiserMouseClicked

    private void anslagListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_anslagListMouseClicked
        // TODO add your handling code here:
       new SeAnslag(anslagList.getSelectedValue(), idb, userID).setVisible(true);        
       this.dispose();
    }//GEN-LAST:event_anslagListMouseClicked

    private void motenMeny1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_motenMeny1MouseClicked
         new SkapaAnslag(idb, userID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_motenMeny1MouseClicked

    private void skapaNotifikation(){
        //Skapar en notifikation i databasen. 
    String koll;
        try {
            koll = idb.fetchSingle("Select userID from notifikationer where userID = '" + userID + "'");
            if (koll == null){
                String query = ("Insert into notifikationer values ('" + userID + "', " + "'J')");
                idb.insert(query);
            }
        } catch (InfException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    
            
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeScreen(idb, userID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> anslagList;
    private javax.swing.JLabel bloggMeny;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableNotiser;
    private javax.swing.JLabel kalenderMeny;
    private javax.swing.JLabel kontoMeny;
    private javax.swing.JLabel loggaUtMeny;
    private javax.swing.JLabel motenMeny;
    private javax.swing.JLabel motenMeny1;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
